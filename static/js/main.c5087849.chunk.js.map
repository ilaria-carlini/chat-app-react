{"version":3,"sources":["Navbar.js","Login.js","Tabs.js","Chat.js","App.js","index.js"],"names":["Navbar","props","Box","sx","width","AppBar","position","Toolbar","theme","createTheme","Login","history","useHistory","useState","login","setLogin","handleSubmit","event","a","preventDefault","data","FormData","currentTarget","get","json","username","password","fetch","method","headers","body","JSON","stringify","credentials","then","res","status","Error","localStorage","set","id","push","ThemeProvider","Container","component","maxWidth","CssBaseline","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","label","name","autoComplete","autoFocus","type","Button","mb","style","left","top","transform","CircularProgress","ENDPOINT","Search","styled","borderRadius","shape","backgroundColor","alpha","palette","common","black","marginRight","spacing","marginLeft","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","TabPanel","children","value","index","other","role","hidden","p","a11yProps","BasicTabs","setValue","contacts","setContacts","profile","setProfile","getContacts","searchedValue","response","useEffect","getProfile","io","on","handleChat","contact","handleLogout","remove","right","IconButton","size","onClick","borderBottom","borderColor","Tabs","onChange","newValue","Tab","e","target","placeholder","inputProps","List","map","ListItemButton","bind","ListItemAvatar","alt","src","avatar","ListItemText","primary","surname","Badge","badgeContent","unreadCount","align","ListItem","secondary","Divider","email","useStyles","makeStyles","messageArea","overflowY","chatGridLeft","chatGridRight","Chat","chat","setChat","speaker","setSpeaker","message","setMessage","messageEnd","useRef","executeScroll","current","scrollIntoView","block","behavior","sendMessage","match","params","getChat","getSpeaker","handleGoBack","classes","Grid","item","className","messages","container","xs","contactId","float","string","sentDate","Date","toLocaleTimeString","ref","clear","bottom","borderTop","onKeyPress","key","App","exact","path","ReactDOM","render","boxShadow","document","getElementById"],"mappings":"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","file":"static/js/main.c5087849.chunk.js","sourcesContent":["import AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\n\nexport default function Navbar(props) {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useHistory } from \"react-router-dom\";\nimport localStorage from 'local-storage';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useState } from 'react';\n\nconst theme = createTheme();\nconst ENDPOINT = 'https://chat-server-challenge.herokuapp.com';\nexport default function Login() {\n  let history = useHistory();\n  const [login, setLogin] = useState(false);\n\n  const handleSubmit = async (event) => {\n    setLogin(true);\n    event.preventDefault();    \n    const data = new FormData(event.currentTarget);\n\n    if (data.get('email') !== \"\" && data.get('password') !== \"\") {\n      const json = {\n        username: data.get('email'),\n        password: data.get('password')\n      };\n\n      fetch(`${ENDPOINT}/login`, {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify(json),\n        credentials: \"include\",\n      })\n      .then(res => {\n        return res.json()\n        .then(data => {\n          res.data = data;\n          return res;\n        })\n      })\n      .then(res => {\n        if (res.status === 200) {\n          localStorage.set('AUTH', res.data.id);\n          setLogin(false);\n          history.push(\"/\");\n        } else throw new Error(res.status);\n      });\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Authentication\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            { login && (\n              <div style={{position: \"absolute\", left: '50%', top: '50%',\n              transform: 'translate(-50%, -50%)'}}>\n              <CircularProgress />\n              </div>\n            )} \n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport Badge from '@mui/material/Badge';\nimport SearchIcon from '@mui/icons-material/Search';\nimport IconButton from '@mui/material/IconButton';\nimport MessageIcon from '@mui/icons-material/Message';\nimport { useHistory } from \"react-router-dom\";\nimport localStorage from 'local-storage';\nimport { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nconst ENDPOINT = \"https://chat-server-challenge.herokuapp.com\";\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.black, 0.05),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.black, 0.08),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n  border: 'alpha(theme.palette.common.black, 1) solid'\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 2 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function BasicTabs() {\n\n  let history = useHistory();\n  if (localStorage.get('AUTH') == null) {\n      history.push(\"/login\");\n  } \n\n  const [value, setValue] = useState(0);\n  const [contacts, setContacts] = useState(null);\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    getContacts('');\n    getProfile();\n\n    async function getProfile() {\n      const response = await fetch(`${ENDPOINT}/profile`, {\n        method: \"GET\",\n        headers: { \"content-type\": \"application/json\" },\n        credentials: \"include\",\n      });      \n      const data = await response.json();\n      setProfile(data) ;\n    }\n    const socket = io(ENDPOINT);\n    socket.on(\"chat message\", () => {\n      getContacts()\n    });\n  }, []);\n\n\n  async function getContacts(searchedValue) {\n    const response = await fetch(`${ENDPOINT}/contacts?q=${searchedValue}`, {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" },\n      credentials: \"include\",\n    });      \n    const data = await response.json();\n    setContacts(data);\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChat = async (contact) => {\n    history.push(`/chat/${contact.id}`);\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    if (localStorage.get('AUTH') != null) {\n      localStorage.remove('AUTH');\n      history.push(\"/login\");\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <div style={{position: \"absolute\", right: \"0\", top: \"4px\", color:\"white\"}}>\n        <IconButton\n          size=\"large\"\n          onClick={handleLogout}\n          color=\"inherit\"\n        >\n          <LogoutIcon />\n        </IconButton>\n      </div>  \n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\" variant=\"fullWidth\">\n          <Tab label=\"Contacts\" {...a11yProps(0)} />\n          <Tab label=\"Profile\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n\n      <Search onChange={(e) => {getContacts(e.target.value)}}>\n          <SearchIconWrapper>\n            <SearchIcon />\n          </SearchIconWrapper>\n          <StyledInputBase\n            placeholder=\"Search…\"\n            inputProps={{ 'aria-label': 'search' }}\n          />\n        </Search>\n\n      {contacts && (\n        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n        { contacts.map((contact) => {\n          return (\n            <ListItemButton key={contact.id} onClick={handleChat.bind(this, contact)}>\n              <ListItemAvatar>\n                <Avatar alt={contact.username} src={contact.avatar} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={contact.name+' '+contact.surname}\n              />\n\n              <Badge badgeContent={contact.history.unreadCount} color=\"primary\">\n                <IconButton\n                  size=\"large\"\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  color=\"inherit\"\n                >\n                  <MessageIcon />\n                </IconButton>\n              </Badge>\n            </ListItemButton>\n          );\n        })}\n      </List>\n      )}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        { profile && (\n          <List sx={{ width: '100%', bgcolor: 'background.paper' }}> \n            <Avatar \n              alt={profile.username} \n              src={profile.avatar} \n              sx={{ width: 100, height: 100 }} \n              style={{margin: '10px auto 30px auto'}} \n            />\n            <Typography align=\"center\" variant=\"h5\" >{profile.name + ' ' + profile.surname}</Typography>\n            <ListItem key={profile.username}>\n              <ListItemText\n                primary={profile.username}\n                secondary=\"Username\"\n              />\n            </ListItem>\n            <Divider />\n            <ListItem key={profile.email}>\n                <ListItemText\n                  primary={profile.email}\n                  secondary=\"Email\"\n                />\n              </ListItem>\n          </List>\n        )}\n      </TabPanel>\n    </Box>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@mui/material/Button';\nimport { useHistory } from \"react-router-dom\";\nimport localStorage from 'local-storage';\nimport { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nconst ENDPOINT = \"https://chat-server-challenge.herokuapp.com\";\n\nconst useStyles = makeStyles({\n  messageArea: {\n    height: '471px',\n    overflowY: 'auto'\n  },\n  chatGridLeft: {\n    backgroundColor: 'rgba(0, 0, 0, 0.03)',\n    padding: '10px 20px', \n    borderRadius: '30px'\n  },\n  chatGridRight: {\n    backgroundColor: 'aliceblue',\n    padding: '10px 20px', \n    borderRadius: '30px'\n  }\n});\n\nconst Chat = (props) => {\n    let history = useHistory();\n    if (localStorage.get('AUTH') == null) {\n        history.push(\"/login\");\n    } \n    const [chat, setChat] = useState(null);\n    const [profile, setProfile] = useState(null);\n    const [speaker, setSpeaker] = useState(null);\n    const [message, setMessage] = useState('');\n    const messageEnd = useRef(null);\n\n    useEffect(() => {\n        getChat();\n        getProfile();\n        getSpeaker();\n        executeScroll();\n\n        async function getChat() {\n            const response = await fetch(`${ENDPOINT}/contacts/${props.match.params.id}/history`, {\n                method: \"GET\",\n                headers: { \"content-type\": \"application/json\" },\n                credentials: \"include\",\n            });      \n            const data = await response.json();\n            setChat(data);\n            executeScroll()\n        }\n\n        async function getProfile() {\n          const response = await fetch(`${ENDPOINT}/profile`, {\n            method: \"GET\",\n            headers: { \"content-type\": \"application/json\" },\n            credentials: \"include\",\n          });      \n          const data = await response.json();\n          setProfile(data) ;\n        }\n\n        async function getSpeaker() {\n            const response = await fetch(`${ENDPOINT}/contacts/${props.match.params.id}`, {\n                method: \"GET\",\n                headers: { \"content-type\": \"application/json\" },\n                credentials: \"include\",\n            });      \n            const data = await response.json();\n            setSpeaker(data);\n        }\n\n        const socket = io(ENDPOINT);\n        socket.on(\"chat message\", () => {\n            getChat()\n        });\n    }, [props.match.params.id]);\n\n    function executeScroll() {\n        if (!messageEnd.current) return;\n        messageEnd.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n    }\n\n    function sendMessage() {\n        if (message !== '') {\n            const json = {\n                \"contactId\": props.match.params.id,\n                \"message\": message,\n                \"sentDate\": \"2017-05-15T13:09:02.035Z\",\n            }\n            fetch(`${ENDPOINT}/contacts/${props.match.params.id}/send`, {\n                method: \"POST\",\n                headers: { \"content-type\": \"application/json\" },\n                body: JSON.stringify(json),\n                credentials: \"include\",\n            }).then(() => {\n                setMessage('');\n            });      \n        }\n    }\n\n    function formatDate(string){\n        return new Date(string).toLocaleTimeString([]);\n    }\n\n    const handleGoBack = async (event) => {\n        event.preventDefault();\n        history.push(\"/\");\n    };\n\n    const handleLogout = async (event) => {\n        event.preventDefault();\n        if (localStorage.get('AUTH') != null) {\n            localStorage.remove('AUTH');\n            history.push(\"/login\");\n        }\n    };\n\n  const classes = useStyles();\n\n  return (\n      <div>  \n          <div style={{\n            position: \"absolute\",\n            left: '0px',\n            top: '4px',\n            color: 'white'}}>\n            <IconButton\n            size=\"large\"\n            onClick={handleGoBack}\n            color=\"inherit\"\n            >\n                <ArrowBackIosIcon />\n            </IconButton>   \n          </div>\n          <div style={{position: \"absolute\", right: \"0\", top: \"4px\", color:\"white\"}}>\n            <IconButton\n              size=\"large\"\n              onClick={handleLogout}\n              color=\"inherit\"\n            >\n              <LogoutIcon />\n            </IconButton>\n            </div>       \n        \n        <Grid item style={{width: '100%', bgcolor: 'background.paper'}}>\n        { chat && (            \n            <List className={classes.messageArea}>\n            { chat.messages.map(item => {\n                return (\n                    <ListItem key={item.id}>\n                        <Grid container>\n                            <Grid item xs={12} className={(props.match.params.id === item.contactId) ? classes.chatGridLeft : classes.chatGridRight} >\n                            { profile && speaker && (\n                                <Avatar\n                                    alt={profile.username} \n                                    src={(props.match.params.id === item.contactId) ? speaker.avatar : profile.avatar} \n                                    style={{float: (props.match.params.id === item.contactId) ? 'left' : 'right', \n                                        margin: (props.match.params.id === item.contactId) ? '0 16px 0 0' : '0 0 0 16px'\n                                    }} \n                                />\n                            )}\n                            <ListItemText style={{margin: '8px 0'}} align={(props.match.params.id === item.contactId) ? 'left' : 'right'} primary={item.message}></ListItemText>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ListItemText align={(props.match.params.id === item.contactId) ? 'left' : 'right'} secondary={formatDate(item.sentDate)}></ListItemText>\n                        </Grid>\n                    </Grid>\n                </ListItem>\n                );\n            })}\n            <div ref={messageEnd} style={{ float:\"left\", clear: \"both\" }}>\n            </div>\n            </List>\n        )}\n            <Grid container style={{padding: '20px', position: 'absolute', bottom: '0px', borderTop: '1px solid rgba(0,0,0,0.1)'}}>\n                <Grid item xs={11}>\n                    <TextField key=\"inputMessage\" onChange={(e) => {setMessage(e.target.value)}} value={message} id=\"outlined-basic\" label=\"Messaggio\" fullWidth variant=\"outlined\" \n                    onKeyPress={(e) => { if (e.key === 'Enter' ) { sendMessage() && executeScroll()} }} />\n                </Grid>\n                <Grid item xs={1} align=\"right\" style={{margin:\"auto\"}}>\n                    <Button \n                    onClick={() => sendMessage() && executeScroll()}\n                    color=\"primary\" aria-label=\"add\"><SendIcon /></Button>\n                </Grid>\n            </Grid>\n        </Grid>\n      </div>\n  );\n}\n\nexport default Chat;","import * as React from 'react';\nimport Navbar from \"./Navbar\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Tabs from \"./Tabs\";\nimport Chat from \"./Chat\";\n\nexport default function App() {\n  return (\n      <BrowserRouter>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Tabs} />\n            <Route path='/login' component={Login} />\n            <Route path='/chat/:id' component={Chat} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <div style={{\n      position: 'absolute', \n      height: '640px', width: '360px', \n      left: '50%', top: '50%',\n      transform: 'translate(-50%, -50%)', boxShadow: '5px 10px 18px #888888'\n      }} >\n        <App />\n    </div>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}